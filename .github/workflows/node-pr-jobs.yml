# Copyright Strimzi authors.
# License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).
name: Node

on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-20.04
    name: Linter
    steps:
      - name: Get PR head
        id: pr_head
        run: |
          OWNER=$(jq -r '.pull_request.base.repo.owner.login' "$GITHUB_EVENT_PATH")
          REPO=$(jq -r '.pull_request.base.repo.name' "$GITHUB_EVENT_PATH")
          PR_REPO="$OWNER/$REPO"
          PR_BRANCH=$(jq -r '.pull_request.head.ref' "$GITHUB_EVENT_PATH")
          echo "::set-output name=repo::$PR_REPO"
          echo "::set-output name=branch::$PR_BRANCH"
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          repository: ${{ steps.pr_head.outputs.repo }}
          ref: ${{steps.pr_head.outputs.branch}}
          fetch-depth: 0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: npm ci
      - name: Lint all files
        run: npm run lint

  e2e-tests:
    runs-on: ubuntu-20.04
    name: E2E Tests
    steps:
      - name: Get PR head
        id: pr_head
        run: |
          OWNER=$(jq -r '.pull_request.base.repo.owner.login' "$GITHUB_EVENT_PATH")
          REPO=$(jq -r '.pull_request.base.repo.name' "$GITHUB_EVENT_PATH")
          PR_REPO="$OWNER/$REPO"
          PR_BRANCH=$(jq -r '.pull_request.head.ref' "$GITHUB_EVENT_PATH")
          echo "::set-output name=repo::$PR_REPO"
          echo "::set-output name=branch::$PR_BRANCH"
      - name: Checkout PR head
        uses: actions/checkout@v2
        with:
          repository: ${{ steps.pr_head.outputs.head }}
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install dependencies
        run: npm ci
      - name: run tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failures
          path: failure_output

  storybook-artifact:
    runs-on: ubuntu-20.04
    name: PR Storybook

    steps:
      - name: Get PR head
        id: pr_head
        run: |
          OWNER=$(jq -r '.pull_request.base.repo.owner.login' "$GITHUB_EVENT_PATH")
          REPO=$(jq -r '.pull_request.base.repo.name' "$GITHUB_EVENT_PATH")
          PR_REPO="$OWNER/$REPO"
          PR_BRANCH=$(jq -r '.pull_request.head.ref' "$GITHUB_EVENT_PATH")
          echo "::set-output name=repo::$PR_REPO"
          echo "::set-output name=branch::$PR_BRANCH"
      - name: Checkout PR head
        uses: actions/checkout@v2
        with:
          repository: ${{ steps.pr_head.outputs.head }}
          fetch-depth: 0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: npm ci
      - name: Build Storybook
        run: npm run storybook:build
      - name: Upload Storybook Artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook
          path: .out
